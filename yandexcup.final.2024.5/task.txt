E. Cluedo (100 баллов)

Вы когда-нибудь задумывались о том, что задача поиска данных в децентрализованной системе имеет глубокие корни в истории человечества?

В Библии фараон искал толкование своего сна и через цепочку запросов нашёл ответ у Иосифа.
В Талмуде царь Навуходоносор обратился с вопросом к своим мудрецам, и через множество попыток ответ был найден Даниилом.
В греческой мифологии загадка Сфинкса передавалась через сеть людей, пока не дошла до Эдипа, который наконец смог её разгадать.

Каждый из этих примеров показывает, как древние решали задачи поиска и распределения информации.
Сегодня, когда данные хранятся на различных удалённых серверах, перед нами стоит схожая задача — найти способы,
которыми эти данные могут быть распределены.

В нашей системе есть важный файл, который хранится на 
7 серверах кластера. Один из серверов является мастер-сервером.
Остальные 6 — клиентские серверы, которые соединены сетью в кольцо. Все серверы на данный момент недоступны.

Файл состоит из 3 секций. Первые две секции состоят из 6 частей, а последняя секция — из 9 частей.
На мастер-сервере хранятся 3 самые важные части файла из каждой секции.
Оставшиеся 18 частей распределены между клиентскими серверами поровну.
Поскольку серверы недоступны, неизвестно, какая часть файла на каком сервере находится.
Однако клиентские серверы иногда опрашивают друг друга.
Клиентский сервер может спросить следующий по кругу клиентский сервер, есть ли у него какая-либо из 
3 частей файла из 3 разных секций.
Если есть, сервер возвращает одну из частей, которая у него хранится.
Если нет, этот же запрос посылается следующему по кругу серверу и так далее, пока не будет найден сервер,
на котором хранится одна из 3 запрошенных частей, или не будут опрошены все остальные клиентские серверы.
Сервер может спрашивать в том числе и про части, которые хранятся на нём самом.

Имеется лог этих запросов, однако в нём нет ответов.
Также по дополнительным логам удалось определить расположение небольшого числа частей файла.
Определите, сколько возможных комбинаций распределения частей по серверам соответствуют этому логу.

Формат ввода
В первой строке записано количество 1<=N<=6 клиентских серверов, у которых известно расположение некоторых частей файла.

В следующих 
N строках записан номер 1 <= si <= 6 клиентского сервера и количество 
1<=ki<=3 известных частей файла на этом сервере, за которыми идут ki различных пар чисел 
1<=sij<=3, 1<=pij<=Pij
номер секции и номер части в этой секции.
Число Pij означает размер секции с номером sij.

Есть как минимум 
2 сервера, у которых известны все хранящиеся на них части.
В следующей строке записано количество 0<=M<=20 записей в логе.

В следующих M строках записаны строчки лога.
Первое число 1<=s<=6 содержит номер сервера, задавшего запрос. Далее идут 3 числа 
1<=r 1 <=6, 
1<=r 2 <=6, 
1<=r 3 <=9 задающих номера частей в каждой из 3 секций файла.
Последнее число 1<=t<=6 содержит номер ближайшего по кольцу сервера, который содержит одну из запрошенных частей,
или число s, если все остальные клиентские серверы ответили отрицательно.

Формат вывода
Выведите количество возможных вариантов расположения частей файла по 7 серверам.

Пример 1
Ввод
2
1 3 1 4 1 6 3 7
3 3 2 2 2 5 3 8
5
5 2 1 9 6
6 5 2 3 2
1 6 1 4 4
2 1 3 5 4
4 4 4 2 1
Вывод
331194

Пример 2
Ввод
2
1 3 1 5 2 4 3 3
2 3 1 1 2 1 3 1
1
2 1 1 2 2
Вывод
5913600

Пример 3
Ввод
3
1 2 3 9 2 5
5 3 3 1 3 3 3 2
3 3 3 4 3 5 3 6
0

Вывод
1008000
